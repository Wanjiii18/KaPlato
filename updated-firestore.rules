rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Karenderias collection - public read access for map functionality
    match /karenderias/{karenderiaId} {
      // Anyone authenticated can read karenderias (for map display)
      allow read: if request.auth != null;
      
      // Only admins can create/update/delete karenderias
      // For now, we'll allow authenticated users to create (you can restrict this later)
      allow create, update, delete: if request.auth != null;
    }
    
    // Karenderia applications collection
    match /karenderia_applications/{applicationId} {
      // Users can create their own applications
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.applicantId;
      
      // Users can read their own applications
      allow read: if request.auth != null && 
                 request.auth.uid == resource.data.applicantId;
      
      // Users can update their own pending applications
      allow update: if request.auth != null && 
                   request.auth.uid == resource.data.applicantId &&
                   resource.data.applicationStatus == 'pending';
      
      // Admins can read/update all applications (you'll need to implement admin role checking)
      // For now, allowing all authenticated users to read (you can restrict this later)
      allow read, update: if request.auth != null;
    }
    
    // For development purposes - you can remove this later
    // This allows all authenticated users to read/write any document
    // Remove this in production and use the specific rules above
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
